{"ast":null,"code":"var _jsxFileName = \"/Users/uddhav/Desktop/react_app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport { useState } from 'react';\n\n// state is at component level, not global.\n// state should be set at component level where its defined, pass function that updaes state to child if needed.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square(_ref) {\n  let {\n    square,\n    onClick,\n    player,\n    className\n  } = _ref;\n  // disabled feature not in tutorial\n  const disabled = square === null ? false : true;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: onClick,\n    disabled: disabled,\n    children: square\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\n;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n  return null;\n}\nfunction Board(_ref2) {\n  let {\n    player,\n    onPlay,\n    squares\n  } = _ref2;\n  const calculateWinnerResult = calculateWinner(squares);\n  if (calculateWinnerResult) {\n    status = calculateWinnerResult[0] + \" won\";\n  } else {\n    status = \"Next player = \" + player;\n  }\n  function onSquareClick(squareNumber, player) {\n    const nextSquares = squares.slice();\n    nextSquares[squareNumber] = player;\n    onPlay(nextSquares, squareNumber, player);\n  }\n  ;\n  const rows = [];\n  for (let row = 0; row < 3; row++) {\n    const squaresInRow = [];\n    for (let col = 0; col < 3; col++) {\n      const index = row * 3 + col;\n      squaresInRow.push(/*#__PURE__*/_jsxDEV(Square, {\n        className: calculateWinnerResult !== null && calculateWinnerResult[1].includes(index) ? \"highlightSquare\" : \"square\",\n        square: squares[index],\n        onClick: () => onSquareClick(index, player)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n    }\n    rows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squaresInRow\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [currentMove, setCurrentMove] = useState(0);\n  const player = currentMove % 2 === 0 ? \"X\" : \"0\";\n  const [history, setHistory] = useState([{\n    board: Array(9).fill(null),\n    note: \"Game start\"\n  }]);\n  const [toggleHistory, setToggleHistory] = useState(false);\n  function handlePlay(nextSquares, squareNumber, player) {\n    const note = \"Player \".concat(player, \" clicked square \").concat(squareNumber);\n    const newEntry = {\n      board: nextSquares,\n      note\n    };\n    const nextHistory = [...history.slice(0, currentMove + 1), newEntry];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(move) {\n    // update history, not present in tutorial \n    setHistory(history.slice(0, move + 1));\n    // set move number\n    setCurrentMove(move);\n  }\n  let allMoves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  });\n  if (toggleHistory) {\n    allMoves = allMoves.reverse();\n  }\n  const currentSquares = history[currentMove];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        player: player,\n        onPlay: handlePlay,\n        squares: currentSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" You are at move number \", currentMove, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggleHistory\",\n        onClick: () => setToggleHistory(!toggleHistory),\n        children: \" Toggle history \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: allMoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Jiorm/XPxAGh50dYR4Vas5zSWqc=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","_ref","square","onClick","player","className","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","calculateWinner","squares","lines","i","length","a","b","c","Board","_ref2","onPlay","calculateWinnerResult","status","onSquareClick","squareNumber","nextSquares","slice","rows","row","squaresInRow","col","index","push","includes","_c2","Game","_s","currentMove","setCurrentMove","history","setHistory","board","Array","fill","note","toggleHistory","setToggleHistory","handlePlay","concat","newEntry","nextHistory","jumpTo","move","allMoves","map","description","reverse","currentSquares","_c3","$RefreshReg$"],"sources":["/Users/uddhav/Desktop/react_app/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport { useState } from 'react';\n\n// state is at component level, not global.\n// state should be set at component level where its defined, pass function that updaes state to child if needed.\n\nfunction Square({square, onClick, player, className}) {\n  // disabled feature not in tutorial\n  const disabled = (square === null ? false : true);\n  return <button\n   className={className} onClick={onClick} disabled={disabled}\n   >{square}</button>;\n};\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n  return null;\n}\n\nfunction Board({player, onPlay, squares}) {\n\n  const calculateWinnerResult = calculateWinner(squares);\n  if (calculateWinnerResult) {\n      status = calculateWinnerResult[0] + \" won\";\n  } else {\n    status =\"Next player = \" + player;\n  }\n\n  function onSquareClick(squareNumber, player) {\n    const nextSquares = squares.slice();\n    nextSquares[squareNumber] = player;\n    onPlay(nextSquares, squareNumber, player);\n  };\n\n  const rows = [];\n  for (let row = 0; row < 3; row++) {\n    const squaresInRow = [];\n    for (let col = 0; col < 3; col++) {\n      const index = row * 3 + col;\n      squaresInRow.push(\n        <Square\n          key={index}\n          className={(calculateWinnerResult !== null && calculateWinnerResult[1].includes(index)? \"highlightSquare\": \"square\")}\n          square={squares[index]}\n          onClick={() => onSquareClick(index, player)}\n        />\n      );\n    }\n    rows.push(\n      <div className=\"board-row\" key={row}>\n        {squaresInRow}\n      </div>\n    );\n  }\n\n  return <>\n    <div className=\"status\">\n      {status}\n    </div>\n    <div>\n      {rows}\n    </div>\n\n  </>;\n}\n\nexport default function Game() {\n  const [currentMove, setCurrentMove] = useState(0);\n  const player = (currentMove % 2 === 0 ? \"X\" : \"0\");\n  const [history, setHistory] = useState([\n    { board: Array(9).fill(null), note: \"Game start\" }\n  ]);\n  const [toggleHistory, setToggleHistory] = useState(false);\n\n  function handlePlay(nextSquares, squareNumber, player) {\n    const note = `Player ${player} clicked square ${squareNumber}`;\n    const newEntry = { board: nextSquares, note };\n\n    const nextHistory = [...history.slice(0, currentMove + 1), newEntry];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(move) {\n    // update history, not present in tutorial \n    setHistory(history.slice(0, move + 1));\n    // set move number\n    setCurrentMove(move);\n  }\n\n  let allMoves = history.map((squares, move) => {\n      let description;\n      if (move > 0) {\n        description = 'Go to move #' + move;\n      } else {\n        description = 'Go to game start';\n      }\n\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n      );\n  });\n\n  if (toggleHistory) {\n    allMoves = allMoves.reverse();\n  }\n\n  const currentSquares = history[currentMove];\n\n  return (\n\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board player={player} onPlay={handlePlay} squares={currentSquares}/>\n        <div> You are at move number {currentMove} </div>\n        <button className=\"toggleHistory\" onClick={() => setToggleHistory(!toggleHistory)}> Toggle history </button>\n      </div>\n      <div className=\"game-info\">\n        <ol>{allMoves}</ol>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}